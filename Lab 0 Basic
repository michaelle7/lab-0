using System;
using System.IO;
class Program
{
    static void Main()
    {
        // prompting user for low and high numbers and calculating the difference
        int lowNumber = GetPositiveInt("please enter a low number: ", "low number must be positive.");
        int highNumber = GetHighNumber("please enter a high number: ", "high number must be greater than the low number.", lowNumber);
        
        // getting the difference between the high number and low number
        int difference = highNumber - lowNumber;
        Console.WriteLine($"the difference between {highNumber} and {lowNumber} is {difference}");

        //using arrays and file i/o
        int size = highNumber - lowNumber + 1;
        int[] numbers = new int[size];
        for (int i = 0; i < size; i++)
        {
            numbers[i] = lowNumber + i;
        }
        // sending the output to a text file
        string filePath = "numbers.txt";
        using (StreamWriter writer = new StreamWriter(filePath))
        {
            for (int i = numbers.Length - 1; i >= 0; i--)
            {
                writer.WriteLine(numbers[i]);
            }
        }
    }

    // method to get a positive int from the user
    static int GetPositiveInt(string prompt, string errorMessage)
    {
        int number;
        do
        {
            Console.WriteLine(prompt);
            if (int.TryParse(Console.ReadLine(), out number) && number >= 0)
            {
                break;
            }
            Console.WriteLine(errorMessage);
        } while (true); // continue looping until a valid positive integer is entered

        return number;
    }

    // method to get a high number greater than low number from the user
    static int GetHighNumber(string prompt, string errorMessage, int lowNumber)
    {
        int number;
        do
        {
            Console.WriteLine(prompt);
            if (int.TryParse(Console.ReadLine(), out number) && number > lowNumber)
            {
                break;
            }
            Console.WriteLine(errorMessage);
        } while (true); // continue looping until a valid integer greater than lowNumber is entered

        return number;
    }
}
